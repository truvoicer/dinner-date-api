security:
    encoders:
        App\Entity\User:
            algorithm: auto

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        auth_user_create:
            pattern: ^/api/auth/user/create
            security: false

        auth_validate_token:
            pattern: ^/api/auth/token/validate
            custom_authenticators:
                - App\Security\ApiTokenAuthenticator
        auth:
            pattern: ^/api/auth/
            custom_authenticators:
                - App\Security\ApiAuthenticator
        api:
            pattern: ^/api/
            custom_authenticators:
                - App\Security\ApiTokenAuthenticator
        main:
            lazy: true
            custom_authenticators:
                - App\Security\ApiTokenAuthenticator
                - App\Security\ApiAuthenticator

#            entry_point: App\Security\CustomFormLoginAuthenticator

            # don't forget to also configure the entry_point if the
            # authenticator implements AuthenticationEntryPointInterface
            # entry_point: App\Security\CustomFormLoginAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/auth/create/user, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: ROLE_USER }