# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.base_url: '%env(SITE_BASE_URL)%'
    app.env: '%env(APP_ENV)%'
    app.aws.dating_media_public_base_url: '%env(AWS_S3_PUBLIC_BASE_URL)%'
    app.facebook.app_id: '%env(FACEBOOK_APP_ID)%'
    app.facebook.app_secret: '%env(FACEBOOK_APP_SECRET)%'
    app.facebook.graph_version: '%env(FACEBOOK_GRAPH_VERSION)%'
    app.facebook.redirect_uri: '%env(FACEBOOK_REDIRECT_URI)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $localPublicFilesystem: '@oneup_flysystem.local_public_filesystem_filesystem'
            $localTempFilesystem: '@oneup_flysystem.local_temp_filesystem_filesystem'
            $s3PublicMediaFilesystem: '@oneup_flysystem.s3_public_media_filesystem_filesystem'
            $projectDir: '%kernel.project_dir%'
            $publicDir: '%kernel.project_dir%/var/public'
            $tempDir: '%kernel.project_dir%/var/temp'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\Service\Tools\FileSystem\Public\PublicMediaInterface:
        tags: ['@request_stack']

    acme.s3_client:
        class: Aws\S3\S3Client
        public: true
        arguments:
            -
                version: '2006-03-01' # or 'latest'
                region: "eu-west-2" # 'eu-central-1' for example
                credentials:
                    key: "AKIA5YIMOI3LDVIULEF7"
                    secret: "Y2ddaafFQZKnxH0gXC+MeAB1OYdPTlqGseV6nk+M"

    auth.service.google:
        class: App\Service\Auth\Google\GoogleAuthService
        public: true
    App\Service\Auth\Google\GoogleAuthService: '@auth.service.google'

    auth.service.facebook:
        class: App\Service\Auth\Facebook\FacebookAuthService
        public: true
    App\Service\Auth\Facebook\FacebookAuthService: '@auth.service.facebook'